version: "3.9"
services:   
  base:
    image: ${ROS2_WS_CONTAINER_NAME}-${USE_ROS_DISTRO}
    build:
      context: ../
      dockerfile: daisy/Dockerfile
      args:
        - USE_ROS_DISTRO=${USE_ROS_DISTRO}
        - ROS2_WS_CONTAINER_NAME=${ROS2_WS_CONTAINER_NAME}
        - UID=${UID:-1000}
        - GID=${UID:-1000}
        - USERNAME=${USERNAME:-daisy}
      target: base

  dev:
    hostname: ${ROS2_WS_CONTAINER_NAME}_${USE_ROS_DISTRO}
    image: ${ROS2_WS_CONTAINER_NAME}-${USE_ROS_DISTRO}
    stdin_open: true
    tty: true
    network_mode: host
    ipc: host
    pid: host
    privileged: true
    user: ${USERNAME}
    environment:
      - DISPLAY=${DISPLAY:-}
      - QT_X11_NO_MITSHM=1
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - $HOME/.Xauthority:/home/${USERNAME}/.Xauthority
      - $ROS2_WS_MOUNT:/home/${USERNAME}/$ROS2_WS_CONTAINER_NAME
      - /tmp:/tmp

  rviz:
    extends: dev
    command: rviz2

  colcon-build:
    container_name: colcon-build
    extends: dev
    command: colcon build

  websocket-bridge:
    container_name: websocket-bridge
    extends: dev
    command: ros2 launch foxglove_bridge foxglove_bridge_launch.xml
  
  foxglove:
    container_name: foxglove
    pid: host
    depends_on: 
      - websocket-bridge
    image: ghcr.io/foxglove/studio:latest
    ports:
      - "6060:8080"
    volumes:
      - ./daisy/foxglove-layout.json:/foxglove/default-layout.json

  novnc:
    extends: base
    runtime: nvidia
    container_name: novnc
    image: novnc
    env_file:
      - .env
    build:
      context: ../
      dockerfile: daisy/Dockerfile
      target: novnc
    # hostname: ${HOSTNAME}
    pid: host
    network_mode: host
    privileged: true
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - $HOME/.Xauthority:/root/.Xauthority
